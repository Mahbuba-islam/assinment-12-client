{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\doctors-portal-client-module-77\\\\src\\\\Pages\\\\Dashboard\\\\CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = _ref => {\n  _s();\n\n  let {\n    appointment\n  } = _ref;\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardError, setCardError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [processing, setProcessing] = useState(false);\n  const [transactionId, setTransactionId] = useState('');\n  const [clientSecret, setClientSecret] = useState('');\n  const {\n    _id,\n    price,\n    patient,\n    patientName\n  } = appointment;\n  useEffect(() => {\n    fetch('https://secret-dusk-46242.herokuapp.com/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify({\n        price\n      })\n    }).then(res => res.json()).then(data => {\n      if (data !== null && data !== void 0 && data.clientSecret) {\n        setClientSecret(data.clientSecret);\n      }\n    });\n  }, [price]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const card = elements.getElement(CardElement);\n\n    if (card === null) {\n      return;\n    }\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card\n    });\n    setCardError((error === null || error === void 0 ? void 0 : error.message) || '');\n    setSuccess('');\n    setProcessing(true); // confirm card payment\n\n    const {\n      paymentIntent,\n      error: intentError\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: card,\n        billing_details: {\n          name: patientName,\n          email: patient\n        }\n      }\n    });\n\n    if (intentError) {\n      setCardError(intentError === null || intentError === void 0 ? void 0 : intentError.message);\n      setProcessing(false);\n    } else {\n      setCardError('');\n      setTransactionId(paymentIntent.id);\n      console.log(paymentIntent);\n      setSuccess('Congrats! Your payment is completed.'); //store payment on database\n\n      const payment = {\n        appointment: _id,\n        transactionId: paymentIntent.id\n      };\n      fetch(`https://secret-dusk-46242.herokuapp.com/booking/${_id}`, {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: JSON.stringify(payment)\n      }).then(res => res.json()).then(data => {\n        setProcessing(false);\n        console.log(data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          style: {\n            base: {\n              fontSize: '16px',\n              color: '#424770',\n              '::placeholder': {\n                color: '#aab7c4'\n              }\n            },\n            invalid: {\n              color: '#9e2146'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm mt-4\",\n        type: \"submit\",\n        disabled: !stripe || !clientSecret || success,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), cardError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: cardError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 30\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-green-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [success, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your transaction Id: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-orange-500 font-bold\",\n          children: transactionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 45\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckoutForm, \"sEWy0bMvR9fYwprMlZm+0C0P6+U=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","CardElement","useStripe","useElements","CheckoutForm","appointment","stripe","elements","cardError","setCardError","success","setSuccess","processing","setProcessing","transactionId","setTransactionId","clientSecret","setClientSecret","_id","price","patient","patientName","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleSubmit","event","preventDefault","card","getElement","error","paymentMethod","createPaymentMethod","type","message","paymentIntent","intentError","confirmCardPayment","payment_method","billing_details","name","email","id","console","log","payment","style","base","fontSize","color","invalid"],"sources":["C:/projects/doctors-portal-client-module-77/src/Pages/Dashboard/CheckoutForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n\r\nconst CheckoutForm = ({ appointment }) => {\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [cardError, setCardError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [processing, setProcessing] = useState(false);\r\n    const [transactionId, setTransactionId] = useState('');\r\n    const [clientSecret, setClientSecret] = useState('');\r\n\r\n    const { _id, price, patient, patientName } = appointment;\r\n\r\n    useEffect(() => {\r\n        fetch('https://secret-dusk-46242.herokuapp.com/create-payment-intent', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `Bearer ${localStorage.getItem('accessToken')}`\r\n            },\r\n            body: JSON.stringify({ price })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data?.clientSecret) {\r\n                    setClientSecret(data.clientSecret);\r\n                }\r\n            });\r\n\r\n    }, [price])\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n\r\n        const card = elements.getElement(CardElement);\r\n\r\n        if (card === null) {\r\n            return;\r\n        }\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card\r\n        });\r\n\r\n        setCardError(error?.message || '')\r\n        setSuccess('');\r\n        setProcessing(true);\r\n        // confirm card payment\r\n        const { paymentIntent, error: intentError } = await stripe.confirmCardPayment(\r\n            clientSecret,\r\n            {\r\n                payment_method: {\r\n                    card: card,\r\n                    billing_details: {\r\n                        name: patientName,\r\n                        email: patient\r\n                    },\r\n                },\r\n            },\r\n        );\r\n\r\n        if (intentError) {\r\n            setCardError(intentError?.message);\r\n            setProcessing(false);\r\n        }\r\n        else {\r\n            setCardError('');\r\n            setTransactionId(paymentIntent.id);\r\n            console.log(paymentIntent);\r\n            setSuccess('Congrats! Your payment is completed.')\r\n            \r\n            //store payment on database\r\n            const payment = {\r\n                appointment: _id,\r\n                transactionId: paymentIntent.id\r\n            }\r\n            fetch(`https://secret-dusk-46242.herokuapp.com/booking/${_id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'authorization': `Bearer ${localStorage.getItem('accessToken')}`\r\n                },\r\n                body: JSON.stringify(payment)\r\n            }).then(res=>res.json())\r\n            .then(data => {\r\n                setProcessing(false);\r\n                console.log(data);\r\n            })\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <CardElement\r\n                    options={{\r\n                        style: {\r\n                            base: {\r\n                                fontSize: '16px',\r\n                                color: '#424770',\r\n                                '::placeholder': {\r\n                                    color: '#aab7c4',\r\n                                },\r\n                            },\r\n                            invalid: {\r\n                                color: '#9e2146',\r\n                            },\r\n                        },\r\n                    }}\r\n                />\r\n                <button className='btn btn-success btn-sm mt-4' type=\"submit\" disabled={!stripe || !clientSecret || success}>\r\n                    Pay\r\n                </button>\r\n            </form>\r\n            {\r\n                cardError && <p className='text-red-500'>{cardError}</p>\r\n            }\r\n            {\r\n                success && <div className='text-green-500'>\r\n                    <p>{success}  </p>\r\n                    <p>Your transaction Id: <span className=\"text-orange-500 font-bold\">{transactionId}</span> </p>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckoutForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}