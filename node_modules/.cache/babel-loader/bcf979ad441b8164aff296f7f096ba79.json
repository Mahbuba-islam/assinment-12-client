{"ast":null,"code":"// import { useEffect, useState } from \"react\"\n// const useAdmin = user => {\n//     const [admin, setAdmin] = useState(false);\n//     const [adminLoading, setAdminLoading] = useState(true);\n//     useEffect( () =>{\n//         const email = user?.email;\n//         if(email){\n//             fetch(`https:${email}`, {\n//                 method:'GET',\n//                 headers: {\n//                     'content-type': 'application/json',\n//                     authorization: `Bearer ${localStorage.getItem('accessToken')}`\n//                 }\n//             })\n//             .then(res=>res.json())\n//             .then(data => {\n//                 setAdmin(data.admin);\n//                 setAdminLoading(false);\n//             })\n//         }\n//     }, [user])\n//     return [admin, adminLoading]\n// }\n// export default useAdmin;","map":{"version":3,"names":[],"sources":["C:/projects/manufacturer-website-client-side/src/hooks/useAdmin.js"],"sourcesContent":["// import { useEffect, useState } from \"react\"\r\n\r\n// const useAdmin = user => {\r\n//     const [admin, setAdmin] = useState(false);\r\n//     const [adminLoading, setAdminLoading] = useState(true);\r\n//     useEffect( () =>{\r\n//         const email = user?.email;\r\n//         if(email){\r\n//             fetch(`https:${email}`, {\r\n//                 method:'GET',\r\n//                 headers: {\r\n//                     'content-type': 'application/json',\r\n//                     authorization: `Bearer ${localStorage.getItem('accessToken')}`\r\n//                 }\r\n//             })\r\n//             .then(res=>res.json())\r\n//             .then(data => {\r\n//                 setAdmin(data.admin);\r\n//                 setAdminLoading(false);\r\n//             })\r\n//         }\r\n//     }, [user])\r\n\r\n//     return [admin, adminLoading]\r\n// }\r\n\r\n// export default useAdmin;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}